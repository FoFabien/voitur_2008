CCS PCM C Compiler, Version 3.180, 21719

               Filename: C:\TS2\Denys_Forest\voiture_RC2.LST

               ROM used: 246 (3%)
                         Largest free fragment is 2048
               RAM used: 22 (14%) at main() level
                         24 (15%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   0B7
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   033
....................  #if defined (__PCM__)  
.................... #include <16F877A.h> 
....................  //////// Standard Header file for the PIC16F877A device ////////////////  
.................... #device PIC16F877A  
.................... #list  
....................  
.................... #device ICD=TRUE  
.................... #fuses HS,NOWDT,NOPROTECT  
.................... #endif  
.................... #use delay(clock=20000000)  
*
003B:  MOVLW  32
003C:  MOVWF  04
003D:  MOVF   00,W
003E:  BTFSC  03.2
003F:  GOTO   04D
0040:  MOVLW  06
0041:  MOVWF  78
0042:  CLRF   77
0043:  DECFSZ 77,F
0044:  GOTO   043
0045:  DECFSZ 78,F
0046:  GOTO   042
0047:  MOVLW  7B
0048:  MOVWF  77
0049:  DECFSZ 77,F
004A:  GOTO   049
004B:  DECFSZ 00,F
004C:  GOTO   040
004D:  RETLW  00
....................   
.................... #define val1 0X3E  
.................... #define val2 0X4F  
.................... #define val3 0XAA  
.................... #define val4 0X02  
.................... byte n,i,j,var,var0,var1,var_tim0,ID;  
....................   
.................... #int_timer0  
.................... void tmer0_int()  
.................... {  
.................... set_timer0(104);  
*
0033:  MOVLW  68
0034:  MOVWF  01
.................... var_tim0=1;  
0035:  MOVLW  01
0036:  MOVWF  2E
.................... }  
....................   
0037:  BCF    0B.2
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   01D
.................... void init(void);  
.................... void trans(void);  
....................   
.................... main()  
.................... {  
*
00B7:  CLRF   04
00B8:  MOVLW  1F
00B9:  ANDWF  03,F
00BA:  MOVLW  06
00BB:  BSF    03.5
00BC:  MOVWF  1F
00BD:  MOVLW  07
00BE:  BCF    03.5
00BF:  MOVWF  1F
.................... init();  
*
00C2:  GOTO   04E
.................... while(true){  
.................... for(j=1; j<5; j++)  
00C3:  MOVLW  01
00C4:  MOVWF  2A
00C5:  MOVF   2A,W
00C6:  SUBLW  04
00C7:  BTFSS  03.0
00C8:  GOTO   0EC
.................... {  
.................... set_timer0(12);  
00C9:  MOVLW  0C
00CA:  MOVWF  01
.................... enable_interrupts(INT_TIMER0);  
00CB:  BSF    0B.5
.................... n=0;i=7;  
00CC:  CLRF   28
00CD:  MOVLW  07
00CE:  MOVWF  29
....................   
.................... switch(j)  
.................... {  
00CF:  MOVLW  01
00D0:  SUBWF  2A,W
00D1:  ADDLW  FC
00D2:  BTFSC  03.0
00D3:  GOTO   0E2
00D4:  ADDLW  04
00D5:  GOTO   0EE
.................... case (1):  
.................... var=val1;  
00D6:  MOVLW  3E
00D7:  MOVWF  2B
.................... break;  
00D8:  GOTO   0E2
.................... case (2):  
.................... var=val2;  
00D9:  MOVLW  4F
00DA:  MOVWF  2B
.................... break;  
00DB:  GOTO   0E2
.................... case (3):  
.................... var=val3;  
00DC:  MOVLW  AA
00DD:  MOVWF  2B
.................... break;  
00DE:  GOTO   0E2
.................... case (4):  
.................... var=val4;  
00DF:  MOVLW  02
00E0:  MOVWF  2B
.................... break;  
00E1:  GOTO   0E2
.................... }  
.................... trans();  
00E2:  GOTO   08C
.................... disable_interrupts(INT_TIMER0);  
00E3:  BCF    0B.5
.................... output_low(pin_c4);  
*
00C0:  MOVLW  FF
00C1:  MOVWF  30
*
00E4:  BCF    30.4
00E5:  MOVF   30,W
00E6:  BSF    03.5
00E7:  MOVWF  07
00E8:  BCF    03.5
00E9:  BCF    07.4
.................... }  
00EA:  INCF   2A,F
00EB:  GOTO   0C5
.................... }  
00EC:  GOTO   0C3
.................... }  
....................   
.................... void init(void){  
.................... setup_counters(RTCC_INTERNAL,RTCC_DIV_64);  
*
004E:  MOVLW  05
004F:  MOVWF  77
0050:  BTFSS  77.3
0051:  GOTO   05A
0052:  MOVLW  07
0053:  CLRF   01
0054:  MOVLW  81
0055:  MOVWF  04
0056:  MOVF   00,W
0057:  ANDLW  C0
0058:  IORLW  0F
0059:  MOVWF  00
005A:  CLRWDT
005B:  MOVLW  81
005C:  MOVWF  04
005D:  MOVF   00,W
005E:  ANDLW  C0
005F:  IORWF  77,W
0060:  MOVWF  00
*
00ED:  GOTO   0ED
.................... set_tris_c( 0x00);  
*
0061:  MOVLW  00
0062:  BSF    03.5
0063:  MOVWF  07
0064:  BCF    03.5
0065:  MOVWF  30
.................... output_c(0x00);  
0066:  MOVWF  30
0067:  BSF    03.5
0068:  MOVWF  07
0069:  BCF    03.5
006A:  CLRF   07
.................... n=0;  
006B:  CLRF   28
.................... do{  
.................... output_high(pin_b5);  
006C:  BSF    03.5
006D:  BCF    06.5
006E:  BCF    03.5
006F:  BSF    06.5
.................... delay_ms(500);  
0070:  MOVLW  02
0071:  MOVWF  31
0072:  MOVLW  FA
0073:  MOVWF  32
0074:  CALL   03B
0075:  DECFSZ 31,F
0076:  GOTO   072
.................... output_low(pin_b5);  
0077:  BSF    03.5
0078:  BCF    06.5
0079:  BCF    03.5
007A:  BCF    06.5
.................... delay_ms(500);  
007B:  MOVLW  02
007C:  MOVWF  31
007D:  MOVLW  FA
007E:  MOVWF  32
007F:  CALL   03B
0080:  DECFSZ 31,F
0081:  GOTO   07D
.................... n++;  
0082:  INCF   28,F
.................... }while(n<=5);  
.................... enable_interrupts(GLOBAL);  
0083:  MOVF   28,W
0084:  SUBLW  05
0085:  BTFSC  03.0
0086:  GOTO   06C
0087:  MOVLW  C0
0088:  IORWF  0B,F
.................... }  
0089:  BCF    0A.3
008A:  BCF    0A.4
008B:  GOTO   0C3 (RETURN)
....................   
.................... void trans(void){  
.................... do{  
.................... while(var_tim0==0){};  
008C:  MOVF   2E,F
008D:  BTFSS  03.2
008E:  GOTO   090
008F:  GOTO   08C
.................... var_tim0=0;  
0090:  CLRF   2E
.................... if(bit_test(var,i)==1)output_high(pin_c4);  
0091:  MOVF   2B,W
0092:  MOVWF  77
0093:  MOVF   29,W
0094:  MOVWF  78
0095:  BTFSC  03.2
0096:  GOTO   09B
0097:  BCF    03.0
0098:  RRF    77,F
0099:  DECFSZ 78,F
009A:  GOTO   097
009B:  MOVLW  00
009C:  BTFSC  77.0
009D:  MOVLW  01
009E:  SUBLW  01
009F:  BTFSS  03.2
00A0:  GOTO   0A8
00A1:  BCF    30.4
00A2:  MOVF   30,W
00A3:  BSF    03.5
00A4:  MOVWF  07
00A5:  BCF    03.5
00A6:  BSF    07.4
.................... else output_low(pin_c4);  
00A7:  GOTO   0AE
00A8:  BCF    30.4
00A9:  MOVF   30,W
00AA:  BSF    03.5
00AB:  MOVWF  07
00AC:  BCF    03.5
00AD:  BCF    07.4
.................... i--;n++;  
00AE:  DECF   29,F
00AF:  INCF   28,F
.................... }while(n<8);  
.................... }  
00B0:  MOVF   28,W
00B1:  SUBLW  07
00B2:  BTFSC  03.0
00B3:  GOTO   08C
00B4:  BCF    0A.3
00B5:  BCF    0A.4
00B6:  GOTO   0E3 (RETURN)
....................  

Configuration Fuses:
   Word  1: 3732   HS NOWDT PUT DEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
